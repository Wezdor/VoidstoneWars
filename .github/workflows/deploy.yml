# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: A job to deploy blog.
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: true # Checkout private submodules(themes or something else).
    
    # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
    - name: Cache node modules
      uses: actions/cache@v1
      id: cache
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: LIBSASS_EXT="no" yarn install --frozen-lockfile
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.DEPLOY_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: Complete EOL in EOF of SSH keys
      run: |
        for key in ~/.ssh/id_rsa; do
          chmod +w $key
          [[ `tail -c 1 $key` != `echo` ]] && echo >> $key
          chmod -w $key
        done
    - name: Git name
      run: 'git config --global user.name "DeployBot"'
    - name: Git email
      run: 'git config --global user.email "bot@github.com"'
    # Deploy hexo blog website.
    - name: Deploy
      run: npm run deploy
    # Use the output from the `deploy` step(use for test action)
    - name: Get the output
      run: |
        echo "${{ steps.deploy.outputs.notify }}"
